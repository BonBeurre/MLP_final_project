name: CI/CD Pipeline

on:
  pull_request:
    branches: [ dev ]
  push:
    branches: [ dev, staging, main ]

jobs:
  pr-checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [python, node]
    steps:
      - uses: actions/checkout@v4
      
      - name: Build application
        run: |
          if [ "${{ matrix.language }}" = "python" ]; then
            pip install -r backend/requirements.txt
          else
            npm install --prefix frontend
            npm run build --prefix frontend
          fi
          
      - name: Run tests
        run: |
          if [ "${{ matrix.language }}" = "python" ]; then
            pytest backend/tests/test_unit.py
          else
            npm test --prefix frontend unit_test.js
          fi

  dev-to-staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Build application
        run: |
          pip install -r backend/requirements.txt
          
      - name: Run tests
        run: |
          pytest backend/tests/test_int.py
          
      - name: Push to staging
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch origin staging:staging
          git checkout staging
          git merge dev
          git push origin staging

  staging-to-prod:
    runs-on: ubuntu-latest
    needs: dev-to-staging
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
      
      - name: Build application
        run: |
            npm install --prefix frontend
            npm run build --prefix frontend
        
      - name: Run tests
        run: |
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
          export CHROME_BIN=/usr/bin/chromium-browser
          npm test --prefix frontend e2e_test.js
          
      - name: Push to main
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch origin staging:staging
          git checkout main
          git merge staging
          git push origin main

  deploy-prod:
    runs-on: ubuntu-latest
    needs: staging-to-prod
    strategy:
      matrix:
        service: 
          - name: frontend
            context: frontend
            dockerfile: frontend/Dockerfile
            image: adibon/front_mlp:latest
            koyeb_id: easy-dominica/front-mlp
          - name: backend
            context: backend
            dockerfile: backend/Dockerfile
            image: adibon/back_mlp:latest
            koyeb_id: soft-serena/back-mlp
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push ${{ matrix.service.name }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          dockerfile: ${{ matrix.service.dockerfile }}
          tags: ${{ matrix.service.image }}
          push: true
      
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: "${{ secrets.KOYEB_TOKEN }}"
          github_token: "${{ secrets.PAT_TOKEN }}"
      
      - name: Deploy ${{ matrix.service.name }} to Koyeb
        run: koyeb service redeploy ${{ matrix.service.koyeb_id }}